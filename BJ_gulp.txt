1.安装好node之后安装npm install -g gulp
2.然后到项目根目录再安装一遍 npm install gulp --save-dev
3.新建gulpfile.js
4.gulp插件安装
npm install gulp-sass --save-dev
5.加载插件
var gulp=require('gulp'),
	sass=require('sass');
	
6.gulp使用

task这个API用来创建任务，在命令行下可以输入 gulp task 来执行gulp的任务。
watch这个API用来监听任务。
src这个API设置需要处理的文件的路径，可以是多个文件以数组的形式[main.scss, vender.scss]，也可以是正则表达式/**/*.scss。
dest这个API设置生成文件的路径，一个任务可以有多个生成路径，一个可以输出未压缩的版本，另一个可以输出压缩后的版本。

//监听

gulp.task('teskless',function(){
	gulp.src('lessCss/*.less')//找到
	.pipe(less())//执行
	.pipe(cssmin())
	.pipe(gulp.dest('css'));//输出||不存在时会自动创建
});
gulp.task('tesklessWatch',function(){
	gulp.watch('lessCss/*.less',['teskless']);
});
gulp.task('default',['tesklessWatch']);











gulp-load-plugins
一次性加载所有插件:var $=require('gulp-load-plugins')();

sass编译
gulp-sass

自动添加浏览器前缀
gulp-autoprefixer 

css压缩
gulp-minify-css 

js代码校验
gulp-jshint 

js合并
gulp-concat 

js压缩
gulp-uglify 

图片压缩
gulp-imagemin 

错误提醒,出现错误时不中断watch操作
gulp-notify 

行数表示
gulp-plumber
gulp-plumber与gulp-notify配合使用(写在任务最前面一般)
gulp.src('xxxxx').pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))

html压缩
htmlmin


重命名
gulp-rename 
自动刷新
gulp-livereload 
图片缓存，只有图片替换了才压缩
gulp-cache





/*
Example
 */var gulp = require('gulp'),
    sass = require('gulp-sass'),
    autoprefixer = require('gulp-autoprefixer'),
    minifycss = require('gulp-minify-css'),
    jshint = require('gulp-jshint'),
    uglify = require('gulp-uglify'),
    imagemin = require('gulp-imagemin'),
    rename = require('gulp-rename'),
    concat = require('gulp-concat'),
    notify = require('gulp-notify'),
    cache = require('gulp-cache'),
    livereload = require('gulp-livereload');
    // Styles任务
gulp.task('styles', function() {
    //编译sass
    return gulp.src('sass/index.scss')
    .pipe(sass())
    //添加前缀
    .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))
    //保存未压缩文件到我们指定的目录下面
    .pipe(gulp.dest(''))
    //给文件添加.min后缀
    .pipe(rename({ suffix: '.min' }))
    //压缩样式文件
    .pipe(minifycss())
    //输出压缩文件到指定目录
    .pipe(gulp.dest('assets'))
    //提醒任务完成
    .pipe(notify({ message: 'Styles task complete' }));
});
*/
//包含处理包
var gulp=require('gulp'),
    notify=require('gulp-notify'),
    autoprefixer=require('gulp-autoprefixer'),
    sass=require('gulp-sass');
//创建处理任务

gulp.task('cssTask',function(){
    //用gulp.src找到路径
    return gulp.src('./scss/index.scss')
    //编译sass
    .pipe(sass())
    //添加浏览器前缀
    .pipe(autoprefixer('last 2 version','safari 5','ie 8','ie 9','opera 12.1','ios6','android 4'))
    //用gulp.dest保存未压缩文件到指定目录
    .pipe(gulp.dest('maxcss'))
    .pipe(notify({message:'cssTask is ok ^_^!!'}));
});
//默认任务
gulp.task('default', function() {
    gulp.start('cssTask');
});
//监听自动执行
gulp.task('watch',function(){
    gulp.watch('scss/*.scss','cssTask');
})